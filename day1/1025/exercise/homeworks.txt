@0919（二）{
# 熟悉在命令行切换python2和python3编程环境
# 熟悉pycharm的编码和执行流程
}

0921(四){
# 2.5
# 2.6
# 2.10
# 2.12
}

0922(五){
# 4.12
# 4.16
# 4.17
# 5.1
# 5.3
}

0923(六){
# 5.5
# 5.9
# 5.15
# 5.17
}

0925(一){
@ASCII码生成器：
·封装字符生成器工具，实现如下功能：
·随机获取小写字母
·随机获取大写字母
·随机获取数字字符
·随机获取ASCII字符
·在外界导入并使用该工具

@进制转换器
·封装进制转换工具
·参数输入十进制数，返回十六进制字符串表示
·在外界导入并使用该工具

}

0927（三）{
@ 颜色转换工具
# 0000FF = 蓝色（三个颜色通道表示）
# 990000FF = 半透明蓝色（四个颜色通道表示）
# 每个颜色通道的值为0-255
·写一个函数，接收3-4个颜色通道值
·写一个showHexColor函数，以不定长位置参数接收3或4个颜色通道值，返回该颜色的十六进制字符串
·调用showHexColor(100,255,0,0)的结果为"64FF0000"
·调用showHexColor(255,0,0)的结果为"FF0000"

@ 人口信息统计表
·使用input每次一个人员信息，形成一个元组，输入0代表输入结束
·（张三，男，20），（李四，女，30），（王五，男，25）...
·将所有失踪人员信息统计为一个列表
·遍历该列表，将人员信息打印为一个表格
·打印时按年龄降序排列

# 10.3
}

0928(四){
# 抄写面向对象课堂代码
}

0929(五){
谭永添留：
以下作业皆不必绘制UML图
# 7.3
# 7.5
# 7.10
# 12.1
# 13.2
# 13.4
}

1009（一）{
#9.2
#9.9
#9.10
#9.11
*自动走时钟表效果（参考曾伟共享的代码）
}

1010（二）{
# 15.2
# 消化和默写递归版词频统计器
}

1011(三){
# 拓展联系人案例，实现去第一条和去最后一条，增加删除联系人功能；
# 拓展代码统计器递归版，形成GUI版；
}

1012(四){
@ 基础作业
# 让僚机中弹或者被撞击时会身亡
# 身亡时伴有音效和动画
# 身亡后不再绘制

@ 超级无敌大学霸作业
# 拓展打飞机代码，令僚机与英雄对战，每人100滴血
# asdw控制英雄，方向键控制僚机
# 每撞击一次，掉20滴血，每中弹一次掉5滴血
# 屏幕左上角记录英雄的剩余血量，右上角记录僚机的剩余血量
# 死的那个人播放爆炸动画并配有欢乐的音效
# 不再绘制死者
}

1013（五）{
# 在Linux下跑通本周小项目
# 在Linux下跑通打飞机；
}

1017（二）{
# 夫妻吵架，谁也不肯先道歉
# 以此为例，模拟死锁
# 模拟死锁的破局
}

1018(三){
@ 多线程：
· 使用三种不同的方式开辟三条不同的线程ta，tb，tc；
· ta，tb，tc分别求出1-100内的所有奇数、质数（除了1和自身外没有因子）、平方数（1、4、9、16...）；
· 当所有结果已得到时，在主线程中打印结果；
· 提示：主线程必须等待子线程执行完毕；
----------
@ 线程池：
· 实现如下方法，从start到end之间任取count个素数（或平方数）
    def getNumbers(start,end,count=10,algor="素数")
· start或end为负数时抛出异常
· 以列表形式返回结果
· 使用3并发线程池返回素数、平方数各两组即4组结果，每组5个
· 在主线程打印结果
}

1019(四){
·使用Condition实现双进程的生产消费模型（一条进程源源不断地生产，另外一条进程源源不断地消费）
·使用Barrier控制进程3个一组进行执行，不足3个的等候超时为5秒，超时后取消
·从1加到一亿，使用单线程、10并发进程、10并发线程分别求其结果，统计并比较执行时间
}

1020(五){
·使用生成器生成三个元组:
    ("http://www.youku.com":"google.html"),
    ("http://www.baidu.com":"baidu.html"),
    ("http://www.163.com":"163.html")
·使用三条协程分别获取网址页面内容；
·要使用非阻塞IO；
·获取成功后，使用文件形式存储html内容；
·全部协程结束后，输出“job done!”
}

1023(一){
@封装OfficeUtil工具模块，实现Word和Excel的读写
·写出数据到Word文档，参数包括写出的文本，要保存的位置；
·读入Word文档为段落列表，参数为文档位置；
·写出Excel文档，参数包括要写出的数据，要保存的位置；
·读入Excel文档为数据，参数为文档位置；
----------
·扩展课堂代码OfficeUtil，实现CSV读写的封装；
·创建猫咪类，昵称、毛色、喜欢的食物们（列表），创建5个实例，形成列表
·使用OfficeUtil将猫咪列表写出为《猫咪.csv》
·手写猫咪列表对应的xml和json
·解析json为猫咪列表
·使用sax解析xml为猫咪列表
}

1024（二）{
·自己动手实现用户注册逻辑
·用户名必须是英文字母且长度为6-20位
·密码必须是数字，长度必须为6-20位
·提示用户是否注册成功
·请其他人来访问你的站点
}

1025（三）{
·拓展课堂代码，实现指定对象的、自定义输入的、一对多的、多线程的、无限的聊天；
* 思路提示：
·要想办法将接入的客户端socket保存起来，以后要使用具体的socket对象给具体的人发消息
·recv()是一个阻塞方法，不能让【接收消息逻辑】阻塞【发送消息逻辑】，因此收发应在不同的线程中
}

1026（四）{
·将hello.sql中的案例独立实现一遍；
·将思维导图笔记中【sql语句进阶】中的全部案例独立实现一遍；
}

1027（五）{
·任意从网上拿5篇新闻，提取其中的媒体信息、标题、作者、日期、邮箱、网址
·将提取到的信息存入数据库的对应表：
    文章表（自增长主键ID，标题，日期，媒体，外键作者ID）
    记者表（自增长ID，邮箱、媒体单位）
·显示记者张三的全部文章信息：http://localhost/cgi-bin/00articles.py?author=张三
}

1031（二）{
基于深度遍历和广度遍历的理解：
·从“岛国 邮箱”百度搜索结果页出发（1级页面）；http://www.baidu.com/s?wd=岛国%20邮箱
·实现深度无限爬邮箱（3级纵深）；
·实现广度无限爬邮箱（3级纵深）；
·打印过程要体现纵深层次；
}






--------------------
@0803（Thu）{
# 4.12
# 4.16
# 4.17
# 4.18
# 4.26
}

@0804(Fri){
# 5.1
# 5.3
# 5.5
# 5.20
# 5.29
}

@0807(Mon){
# 6.1
# 6.2
# 6.4
# 6.17
}

@0808（Tue）{
以下作业皆不必绘制UML图
# 7.3
# 7.5
# 7.10
# 12.1
}

@0809-0810（Wed,Thu）{
# 抄课堂代码
# 0808作业烂熟
}


@0811(Fri){
# 9.1
# 9.2
# 9.9
# 9.27
}

0814(Mon){
# 验证码生成器GUI版（用户定义生成的组数、用户定义每组的子串数量）
# 词频统计器GUI版（由用户决定统计的文件夹，统计对象可以是文件夹或单个文件）
}

0815(二){
# 将代码统计器制成GUI版，路径由用户自己选择
}

0816(三){
· 在打飞机窗口右上角添加【暂停/继续】按钮；
· 点击切换暂停/继续，暂停时画面静止，继续时则再次激活；
· 背景音乐也要同步暂停或继续；
· 提示：用一个精灵包装四副面孔(四个切换方法)，监听鼠标的划过和点击事件，调用函数切换状态；
· 提示：用一个布尔值存储窗口状态，当状态为假时，则刷帧逻辑（while True...）不执行；
}

0821(一){
·使用生成器分三次生成谷歌（访问不到）、新浪、腾讯三个【网址-存储文件名称】键值对；
·使用三条协程分别获取网址页面内容；
·获取成功后，使用文件形式将页面文本存储到文件中，路径和文件名使用参数传递；
·获取超时的页面，存储“获取超时”到对应文件即可；
·全部六条协程结束后，输出“job done!”
}

0822(二){
·使用Condition实现进程间的通信（生产消费模型）；
·使用Barrier实现进程三个一组为单位执行；
·从1加到1000000，使用单线程、并发进程、并发线程分别求其结果，统计并比较执行时间，思考为什么；
}

0823(三){
·自己搭服务器
·使用requests访问自己的服务器，实现get，post,文件下载，服务端返回的内容为json格式；
·将课堂注册表单案例，使用html格式输出在界面上，用户名用红色显示，密码用蓝色显示；
}

0824(四){
·将课堂案例的【单客户端无限聊天】改写成【多客户端无限聊天】（使用多线程）；
}

0825(五){
以python1701\res\HotelCalifornia.txt为蓝本，实现以下功能：
·找出所有以单词she开头的句子，不区分大小写；
·找出所有带人称（包括但不限于I,you,he,she,it,we,they,me,him,her,us,them...）的句子，在句子前面加“>”符号,不区分大小写；
·把所有中文替换为“此处为中文”；
·找出所有hotel出现的位置，不区分大小写；
·将邮箱用醒目的格式呈现【12345@qq.com】；
·给所有句子的末尾加“;”
·将上述结果生成报告；
}

0828(一){
以python1701\res\HotelCalifornia.txt为蓝本，实现以下功能：
·扩展课堂代码OfficeUtil，实现CSV读写的封装；
·创建猫咪类，昵称、体重、毛色、喜欢的食物们（列表），创建5个实例，形成猫咪列表
·实现猫咪列表和《猫咪.csv》的互转
·手写猫咪列表对应的《猫咪.xml》
·使用sax解析《猫咪.xml》为猫咪列表（选做）
}

0829(二){
·实现深度爬取将递归深度定位在第三级；（第一级=起始页面，第二级=子页面，第三级=孙子页面）
·思考如何实现无限爬邮箱之广度爬取；
}

0830(三){
·拓展课堂案例之多线程广度爬虫，爬三级链接，在url搜集完毕后，多线程爬取每个url的邮箱，结果写入一个CSV，每个邮箱都要有【相关度、爬取日期】；
·拓展课堂代码06，将个股列表写入CSV
}

0831(四){
@课堂作业{
·封装邮件发送工具，有类有方法，其发送方法以参数形式配置如下信息：
    发件人，密码，收件人，标题，正文，是否HTML，附件们
·外界通过创建该工具的实例，调用其方法自由发送邮件（可HTML可普通文本，可附件可不附件，附件可多可少）
}
·熟悉基本sql语句；
}

0901（五）{
@封装pymysql工具：
·封装插入记录方法，参数包括：要插入的表、要插入的【字段和值对应字典】，返回受影响的记录数；
·封装删除记录方法，参数包括：要删除的表，删除条件【字段和值对应字典】，返回受影响的记录数；
·封装修改记录方法，参数包括：要修改的表，修改条件的【字段和值对应字典】，要修改成的【字段和值对应字典】，返回受影响的记录数；
·封装查询方法，参数包括：要查询的表，查询条件【字段和值对应字典】，返回查询到的结果集；
·封装复杂查询方法，参数包括：要执行的sql语句，返回查询到的结果集；
·封装事务方法，参数包括：要批量执行的sql语句列表，返回受影响的记录数；

@熟悉sql语句，熟练盲敲课堂sql语句；

}

0904（一）{
@家庭作业{
写一个股价走势图生成的工具文件，实现如下功能：
用户可以输入个股csv文件所在的路径，针对收盘价自动生成股价走势图，默认生成全部；
还可以指定起止日期、线条颜色和线型；
生成的走势图文件默认存储在csv同级目录的img文件夹下，除了扩展名以外与csv同名；
当然也可以自定义存储路径；
}
}